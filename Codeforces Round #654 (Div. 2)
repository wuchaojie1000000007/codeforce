B - Magical Calendar

/*fun main() {
    repeat(readLine()!!.toInt()) {
        val (a, b) = readLine()!!.split(" ").map { it.toInt() }
        var res = 0L
        if (a > b) {
            res = (1 + b) * b.toLong() / 2L
        } else {
            res = a.toLong() * (a - 1) / 2L + 1
        }
        //println("A:$a, B:$b, res:$res")
        println(res)
    }
}*/

Accepted


C - A Cookie for You

/*fun main() {
    repeat(readLine()!!.toInt()){
        val (a, b, n, m) = readLine()!!.split(" ").map { it.toLong() }
        var ans = "No"
        if (a+b>=m+n) {
            when {
                a>b -> if (m<=b) ans = "YES"
                a==b -> if (m<=a) ans = "YES"
                a<b -> if (m<=a) ans = "YES"
            }
        }
        println(ans)
    }
}*/

Accepted


D - Grid-00100

/*fun main() {
    repeat(readLine()!!.toInt()) {
        val (n, k) = readLine()!!.split(" ").map { it.toInt() }
        val q = k / n
        var res = k % n
        if (res == 0)
            println(0)
        else
            println(2)
        for (i in 0..n-1){
            val list = MutableList(n){0}
            for (j in 0..q-1)
                list[(i+j)%n] = 1

            if (res != 0) {
                list[(i + q) % n] = 1
                res -= 1
            }
            println(list.joinToString(""))
        }
    }
}*/

Accepted


F - Raging Thunder

fun main() {
    val (n, p) = readLine()!!.split(" ").map { it.toInt() }
    val str = readLine()!!.split("").subList(1, n + 1)
    val num = MutableList(n) { 0 }
    repeat(n) {
        if (str[it] == "<") {
            num[it] = 1
        }
    }
    //println(num)
    repeat(p) {
        val (l, r) = readLine()!!.split(" ").map { it.toInt() }
        var max = 1
        var countL = 0
        var countR = 0
        var before = num[l - 1]
        for (i in l - 1..r - 1) {
            when (num[i]) {
                1 -> {
                    if (before == 1) {
                        countR += 1
                        max = maxOf(max, countR)
                    }
                    if (before == 0) {
                        countL = 0
                        before = 1
                        countR = 1
                    }
                    num[i] = 0
                }
                0 -> {
                    if (before == 0) {
                        countL += 1
                        max = maxOf(max, countL)
                    }
                    if (before == 1) {
                        countL = countR + 1
                        max = maxOf(max, countL)
                        countR = 0
                        before = 0
                    }
                    num[i] = 1
                }
            }
        }
        println(max)
        //println(num)
    }
}

Time limit exceeded on test 3
