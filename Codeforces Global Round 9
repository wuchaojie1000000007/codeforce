A - Sign Flipping

fun main() {
    repeat(readLine()!!.toInt()) {
        val size = readLine()!!.toInt()
        val list = readLine()!!.split(" ").map { it.toInt() }.toMutableList()
        for (i in 0..size - 1) {
            when (i % 2) {
                0 -> if (list[i] > 0)
                    list[i] = list[i] * (-1)
                1 -> if (list[i] <0)
                    list[i] = list[i] * (-1)
            }
        }
        println(list.joinToString(" "))
    }
}

accepted


B - Neighbor Grid

fun main() {
    repeat(readLine()!!.toInt()) {
        val (row, column) = readLine()!!.split(" ").map { it.toInt() }
        var answer = "YES"

        val firstLine = readLine()!!.split(" ").map { it.toInt() }
        if (firstLine.any { it>3 })
            answer = "No"
        if (firstLine[0]>2 || firstLine[column-1]>2)
            answer = "NO"

        repeat(row-2) {
            val line = readLine()!!.split(" ").map { it.toInt() }
            if (line.any { it>4 })
                answer = "No"
            if (line[0]>3 || line[column-1]>3)
                answer = "NO"
        }

        val lastLine = readLine()!!.split(" ").map { it.toInt() }
        if (lastLine.any { it>3 })
            answer = "No"
        if (lastLine[0]>2 || lastLine[column-1]>2)
            answer = "NO"

        println(answer)
        if (answer == "YES") {
            val max = MutableList(column) {3}

            max[0] -= 1
            max[column-1] -= 1
            println(max.joinToString(" "))

            for (index in max.indices) {
                max[index] += 1
            }
            repeat(row-2) {
                println(max.joinToString(" "))
            }

            for (index in max.indices) {
                max[index] -= 1
            }
            println(max.joinToString(" "))
        }
    }
}

Accepted


