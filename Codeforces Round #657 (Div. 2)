A - Acacius and String

fun main() {
    val r = System.`in`.bufferedReader()
    val s = StringBuilder()
    val t = "abacaba".toCharArray()
    small@for (k in 0 until r.readLine().toInt()) {
        val length = r.readLine()!!.toInt()
        val str = r.readLine()!!.toCharArray()
        big@for (i in 0..length - 7) {
            val m = str.clone()
            for (j in 0..6) {
                if (m[i + j] != t[j] && m[i + j] != '?') {
                    continue@big
                }
                m[i + j] = t[j]
            }
            var cnt = 0
            val n = m.map { if (it=='?') 'z' else it }.toCharArray()
            for (j in 0..length - 7){
                if (n.copyOfRange(j, j+7).contentEquals(t)){
                    cnt += 1
                }
            }
            if (cnt == 1) {
                s.appendln("YES")
                s.appendln(n)
                continue@small
            } else continue@big
        }
        s.appendln("NO")
    }
    print(s)
}

Accepted	171 ms	22600 KB


B - Dubious Cyrpto

fun main() {
    val re = System.`in`.bufferedReader()
    val s = StringBuilder()
    loop@ for (i in 0 until re.readLine()!!.toInt()) {
        val (l, r, m) = re.readLine()!!.split(" ").map { it.toLong() }
        loop2@ for (j in l..r){
            val a = j
            val n = (m+r-l)/a
            if (n<1) continue@loop2
            if (n*a>=m-r+l && n*a<=m+r-l){
                if (m-n*a>=0){
                    val c = l
                    val b = l+m-n*a
                    s.appendln("$a $b $c")
                    continue@loop
                } else {
                    val c = r
                    val b = r-(a*n-m)
                    s.appendln("$a $b $c")
                    continue@loop
                }
            }
        }
    }
    print(s)
}

Accepted	124 ms	21600 KB
